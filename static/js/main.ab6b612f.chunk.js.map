{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/login/Login.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Navbar/Navbar.module.css","reportWebVitals.js","redux/dialogs-reducer.js","redux/store.js","redux/users-reducer.js","api/api.js","redux/profile-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","assets/images/sun.svg","components/common/preloader/Preloader.js","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/News/News.jsx","components/Videos/Videos.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","assets/images/DefaultPhoto.png","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/login/Login.jsx","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","inititalState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","type","body","store","_state","dialogsPage","profilePage","posts","likesCount","newPostText","getState","this","subscribe","observer","_callSubscriber","dispatch","profileReducer","window","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOOGLE_IS_FETCHING","TOOGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","toogleFollowingProgress","userId","usersReducer","map","u","followed","count","filter","instance","axios","create","withCredentials","headers","baseURL","UsersAPI","getUsers","get","response","data","follow","post","unfollow","delete","getProfile","console","warn","ProfileAPI","getStatus","updateStatus","status","put","authAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","profile","setStatus","newPost","newText","SET_USER_DATA","email","login","isAuth","authReducer","reducers","combineReducers","usersPage","auth","createStore","applyMiddleware","thunkMiddleware","Navbar","className","classes","nav","item","to","activeClassName","active","Post","props","src","likes","MyPosts","postsElements","newPostElement","React","createRef","postsBlock","onChange","text","current","value","updateNewPostText","ref","onClick","addPost","Preloader","preloader","Component","ProfileStatusWithHooks","useState","editMode","SetEditMode","onDoubleClick","e","currentTarget","autoFocus","onBlur","ProfileInfo","alt","descriptionBlock","photos","large","MyPostsContainer","connect","updateNewPostTextActionCreator","Profile","News","Videos","Settings","DialogItem","path","dialog","Message","Dialogs","dialogsElements","messagesElements","dialogsItems","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","Users","pagesCount","Math","ceil","pages","i","push","p","styles","selectedPage","onPageChanged","small","DefaultPhoto","userPhoto","disabled","some","UsersContainer","pageNumber","resultCode","followSuccess","unfollowSuccess","setCurrentPage","ProfileContainer","match","params","getUserProfile","compose","withRouter","Header","header","loginBlock","HeaderContainer","getAuthUserData","setAuthUserData","sleep","ms","Promise","resolve","setTimeout","onSubmit","values","a","alert","JSON","stringify","Login","validate","errors","username","password","confirm","render","handleSubmit","form","submitting","pristine","input","meta","error","touched","reset","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab6b612f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__ptfmR\",\"dialog\":\"Dialogs_dialog__3aXTY\",\"dialogsItems\":\"Dialogs_dialogsItems__1iGez\",\"active\":\"Dialogs_active__2NnvX\",\"messages\":\"Dialogs_messages__15gMm\",\"message\":\"Dialogs_message__DVFjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ProfileInfo_background__11Dr5\",\"avatar\":\"ProfileInfo_avatar__mUJEP\",\"status\":\"ProfileInfo_status__NB5Ko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__1Eql2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__fcV4-\",\"posts\":\"MyPosts_posts__nFd1t\",\"item\":\"MyPosts_item__3EURg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Yw-X\",\"likes\":\"Post_likes__1aeaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3RS2O\",\"selectedPage\":\"Users_selectedPage__3TOk_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Y_kQ\",\"loginBlock\":\"Header_loginBlock__-4qv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__G-qHp\",\"item\":\"Navbar_item__1zo32\",\"active\":\"Navbar_active__3uHol\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet inititalState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Ivanych' },\r\n        { id: 2, name: 'Alex' },\r\n        { id: 3, name: 'Danila' },\r\n        { id: 4, name: 'Churchill' },\r\n        { id: 5, name: 'Anonim' },\r\n        { id: 6, name: 'Boriska' },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'Priv' },\r\n        { id: 3, message: 'mda...' },\r\n        { id: 4, message: ':)' },\r\n        { id: 5, message: 'You are in danger' },\r\n        { id: 6, message: 'I Boriska)' },\r\n    ],\r\n    newMessageBody: \"\"\r\n}\r\n\r\n\r\n\r\nconst dialogsReducer = (state = inititalState, action) => {\r\n\r\n\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n\r\n\r\n\r\n\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const sendMessageCreator = () => ({\r\n    type: SEND_MESSAGE,\r\n})\r\n\r\nexport const updateNewMessageBodyCreator = (body) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY, body: body\r\n})\r\n\r\nexport default dialogsReducer;","import dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\n\r\n\r\n\r\nlet store = {\r\n    _state: {\r\n\r\n        dialogsPage: {\r\n\r\n            dialogs: [\r\n                { id: 1, name: 'Ivanych' },\r\n                { id: 2, name: 'Alex' },\r\n                { id: 3, name: 'Danila' },\r\n                { id: 4, name: 'Churchill' },\r\n                { id: 5, name: 'Anonim' },\r\n                { id: 6, name: 'Boriska' },\r\n            ],\r\n            messages: [\r\n                { id: 1, message: 'Hi' },\r\n                { id: 2, message: 'Priv' },\r\n                { id: 3, message: 'mda...' },\r\n                { id: 4, message: ':)' },\r\n                { id: 5, message: 'You are in danger' },\r\n                { id: 6, message: 'I Boriska)' },\r\n            ],\r\n            newMessageBody: \"\"\r\n        },\r\n\r\n        profilePage: {\r\n            posts:\r\n                [\r\n                    { id: 1, message: 'I love Sabaton!!!', likesCount: 20 },\r\n                    { id: 2, message: 'Hey?! I here alone?', likesCount: 12 },\r\n                    { id: 3, message: 'Okay...', likesCount: 2 },\r\n                ],\r\n            newPostText: 'KomaCorp'\r\n\r\n        },\r\n    },\r\n\r\n\r\n    // [\r\n    //     { id: 1, photoUrl: 'https://i.pinimg.com/736x/0f/0c/23/0f0c23b71d75c9c00a5813808b65d2f0--warhammer-k-memes-warhammer-.jpg', followed: false, fullName: 'IvanKoma', status: 'Giraffes are heartless creatures', location: { city: 'AS', country: 'Russia' } },\r\n    //     { id: 2, photoUrl: 'http://epicau.com/wp/wp-content/uploads/2017/01/eldarfarseer-564x430.jpg', followed: true, fullName: 'Dancha', status: 'broken legs...', location: { city: 'Volgograd', country: 'Russia' } },\r\n    //     { id: 3, photoUrl: 'https://i.pinimg.com/236x/aa/79/e5/aa79e5ae7f9f8016ab9f2e6b5b36862b.jpg', followed: false, fullName: 'Alex', status: 'Warhammer 40000 best!', location: { city: 'AS', country: 'Russia' } },\r\n    //     { id: 4, photoUrl: 'http://www.angel-spire.com/forum/uploads/monthly_12_2019/post-359-1575826066.png', followed: true, fullName: 'Churchill', status: 'Dead', location: { city: 'London', country: 'Great Britain' } },\r\n\r\n    // ]\r\n\r\n\r\n\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer; // Pattern OBSERVER\r\n    },\r\n\r\n    _callSubscriber() {\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n    dispatch(action) {\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action);\r\n\r\n        this._callSubscriber(this._state);\r\n    },\r\n\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","\r\nimport { UsersAPI } from './../api/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'TOOGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 4,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n\r\n        case TOOGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n})\r\n\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n})\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users: users\r\n})\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage,\r\n})\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount\r\n})\r\n\r\nexport const toogleIsFetching = (isFetching) => ({\r\n    type: TOOGLE_IS_FETCHING,\r\n    isFetching,\r\n})\r\nexport const toogleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOOGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n})\r\nexport const getUsers = () => ({\r\n    type:\"\"\r\n})\r\n\r\n\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toogleFollowingProgress(true, userId));\r\n        UsersAPI.follow(userId)\r\n\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n\r\n                }\r\n                dispatch(toogleFollowingProgress(false, userId));\r\n\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toogleFollowingProgress(true, userId));\r\n        UsersAPI.unfollow(userId)\r\n\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n\r\n                }\r\n                dispatch(toogleFollowingProgress(false, userId));\r\n\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import axios from \"axios\";\r\nimport { follow } from \"../redux/users-reducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"4ba4a295-a4e6-4c0d-a254-01bda40e5ba2\"\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data;\r\n        });\r\n\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId.id}`)\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId.id}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('ProfileAPI object')\r\n        return ProfileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const ProfileAPI = {\r\n   \r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/`+userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {\r\n            status: status\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import store from \"./store\";\r\nimport { ProfileAPI, UsersAPI } from './../api/api';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts:\r\n        [\r\n            { id: 1, message: 'I love Sabaton!!!', likesCount: 20 },\r\n            { id: 2, message: 'Hey?! I here alone?', likesCount: 12 },\r\n            { id: 3, message: 'Okay...', likesCount: 2 },\r\n        ],\r\n    newPostText: 'KomaCorp',\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText,\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addPostActionCreator = () => ({\r\n    type: ADD_POST,\r\n})\r\n\r\n\r\nexport const updateNewPostTextActionCreator = (text) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n})\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\n\r\n\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n})\r\n\r\n\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    UsersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n\r\n    });\r\n}\r\n\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    ProfileAPI.getStatus(userId).then(response => {\r\n        dispatch(setStatus(response.data));\r\n\r\n    });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    ProfileAPI.updateStatus(status).then(response => {\r\nif (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n}\r\n\r\n        \r\n\r\n    });\r\n}\r\n\r\n\r\nexport default profileReducer;","import { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({\r\n    type: SET_USER_DATA,\r\n    data: { userId, email, login }\r\n})\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.me()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let { id, login, email } = response.data.data;\r\n                    dispatch(setAuthUserData(id, email, login));\r\n                }\r\n            });\r\n}\r\n\r\nexport default authReducer;","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import { NavLink } from 'react-router-dom';\r\nimport classes from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${classes.item} ${classes.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={classes.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/videos' activeClassName={classes.active}>Videos</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/users' activeClassName={classes.active}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.item}>\r\n                <img src='https://image.winudf.com/v2/image/Y29tLmVuZ2luYWlyLmNvb2xjYXR3YWxscGFwZXJfc2NyZWVuXzJfMTUyNzI5OTk2OF8wMDA/screen-2.jpg?fakeurl=1&type=.jpg' />\r\n                {props.message}\r\n                <div className={classes.likes}>\r\n                    <span >Likes:</span> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\r\n    let postsElements = props.posts.map(posts => <Post message={posts.message} likesCount={posts.likesCount} />);\r\n\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3> My posts</h3>\r\n            <div>\r\n\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add Post</button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyPosts;","export default __webpack_public_path__ + \"static/media/sun.41ed3ebb.svg\";","import preloader from '../../../assets/images/sun.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n    \r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n        \r\n    }\r\n\r\n    activateEditMode() {\r\n        this.setState( {\r\n            editMode: true\r\n        } );\r\n    }\r\n    deactivateEditMode() {\r\n        this.setState( {\r\n            editMode: false\r\n        } );\r\n        this.props.updateStatus(this.state.status);\r\n\r\n    }\r\n\r\n\r\n    onStatusChange= (e) => {\r\nthis.setState({\r\n    status: e.currentTarget.value\r\n})\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n            status: this.props.status\r\n            });\r\n\r\n    }\r\n    \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div className={classes.status}>\r\n                        <span  onDoubleClick={ this.activateEditMode.bind(this) }>{this.props.status || \"Empty status\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode.bind(this) } value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;\r\n","import React, { useState } from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\nimport { setStatus } from './../../../redux/profile-reducer';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, SetEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        SetEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        SetEditMode(false);\r\n        props.updateStatus(status);\r\n\r\n    }\r\n\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n        \r\n            }\r\n   \r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div className={classes.status}>\r\n                        <span onDoubleClick={activateEditMode} >{props.status || \"Empty status\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input value={status} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from '../../common/preloader/Preloader'\r\nimport classes from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus';\r\nimport { updateStatus } from './../../../redux/profile-reducer';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <div>\r\n                <img\r\n                    src='https://camo.githubusercontent.com/7bcebf946ea0560dc2deef04bf2db161f3a1f0bd1bede55527f3808ac68a3e57/68747470733a2f2f7062732e7477696d672e636f6d2f6d656469612f45584c4b6f787a586b41414f5330572e6a7067' alt=\"Borsh\"/>\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addPost, addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import classes from './Profile.module.css'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import classes from './News.module.css';\r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default News;","import classes from './Videos.module.css';\r\n\r\nconst Videos = (props) => {\r\n    return (\r\n        <div>\r\n            Videos\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videos;","import classes from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <div className={classes.dialog + ' ' + classes.active} >\r\n        <img src='https://pngimg.com/uploads/hacker/hacker_PNG33.png' />\r\n        <NavLink to={path}> {props.name} </NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import classes from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return <div className={classes.dialog}> {props.message}</div>\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message;","import React from 'react'\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message'\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />);\r\n\r\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id} />);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n\r\n            </div>\r\n\r\n\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div><textarea\r\n                        value={newMessageBody}\r\n                        onChange={onNewMessageChange}\r\n                        placeholder='Enter your message here'></textarea></div>\r\n                    <div><button onClick={onSendMessageClick}>Send Message</button></div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\n\r\nexport default DialogsContainer;","export default __webpack_public_path__ + \"static/media/DefaultPhoto.e6a97981.png\";","import DefaultPhoto from '../../assets/images/DefaultPhoto.png'\r\nimport styles from './Users.module.css'\r\nimport React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport * as axios from 'axios'\r\nimport { UsersAPI } from '../../api/api'\r\nimport { unfollow } from './../../redux/users-reducer';\r\n\r\n\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 0; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && styles.selectedPage}\r\n                        onClick={() => { props.onPageChanged(p) }}>{p}</span>\r\n\r\n                })}\r\n\r\n            </div>\r\n\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small != null ? u.photos.small : DefaultPhoto} className={styles.userPhoto} />\r\n                            </NavLink>\r\n                        </div>\r\n\r\n\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id);\r\n\r\n\r\n                                }}>Unfollow</button>\r\n\r\n\r\n                                : <button disabled={props.followingInProgress} onClick={() => {\r\n                                    props.follow(u.id);\r\n\r\n\r\n                                }}>Follow</button>}\r\n\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { connect } from \"react-redux\";\r\nimport { follow, setCurrentPage, unfollow, toogleFollowingProgress, getUsers } from \"../../redux/users-reducer\";\r\nimport React from 'react'\r\nimport Users from './Users';\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport { UsersAPI } from './../../api/api';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader />\r\n                : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toogleFollowingProgress,\r\n    getUsers,\r\n\r\n\r\n})\r\n    (UsersContainer);\r\n","import Profile from './Profile';\r\nimport React from 'react'\r\nimport * as axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus,updateStatus } from './../../redux/profile-reducer'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            <Redirect to={'/login'}/>;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);","import { NavLink } from 'react-router-dom'\r\nimport classes from './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img src='https://pngimg.com/uploads/bulb/bulb_PNG1250.png' alt='logo' />\r\n\r\n        <div className={classes.loginBlock}>\r\n            {props.isAuth ? props.login\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import Header from \"./Header\";\r\nimport React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { getAuthUserData } from '../../redux/auth-reducer'\r\nimport * as axios from 'axios'\r\nimport { authAPI } from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuthUserData })(HeaderContainer);","import React from 'react'\r\nimport { Form, Field } from 'react-final-form'\r\nimport classes from './Login.module.css'\r\n\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\nconst onSubmit = async values => {\r\n  await sleep(2300)\r\n  window.alert(JSON.stringify(values, 0, 2))\r\n}\r\n\r\nconst Login = () => (\r\n  <>\r\n  <h1>Sign In</h1>\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      validate={values => {\r\n        const errors = {}\r\n        if (!values.username) {\r\n          errors.username = 'Required' \r\n        }\r\n        if (!values.password) {\r\n          errors.password = 'Required'\r\n        }\r\n        if (!values.confirm) {\r\n          errors.confirm = 'Required'\r\n        } else if (values.confirm !== values.password) {\r\n          errors.confirm = 'Must match'\r\n        }\r\n        return errors\r\n      }}\r\n      render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n          <Field name=\"username\">\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <label>Username</label>\r\n                <input {...input} type=\"text\" placeholder=\"Username\" />\r\n                {meta.error && meta.touched && <span  className={classes.error}>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n\r\n          <Field name=\"password\">\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <label>Password</label>\r\n                <input {...input} type=\"password\" placeholder=\"Password\" />\r\n                {meta.error && meta.touched && <span  className={classes.error}>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n\r\n          <Field name=\"confirm\">\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <label>Password confirm</label>\r\n                <input {...input} type=\"password\" placeholder=\"Confirm\" />\r\n                {meta.error && meta.touched && <span  className={classes.error}>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n\r\n          <div className=\"buttons\">\r\n            <button type=\"submit\" disabled={submitting}>\r\n              Submit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={form.reset}\r\n              disabled={submitting || pristine}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n          <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n        </form>\r\n      )}\r\n    />\r\n  </>\r\n)\r\nexport default Login;","import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport News from './components/News/News';\nimport Videos from './components/Videos/Videos';\nimport Settings from './components/Settings/Settings';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/login/Login';\n\n\nconst App = (props) => {\n\n\n\n  return (\n\n    <div className='app-wrapper'>\n      <HeaderContainer />\n      <Navbar />\n      <div className='app-wrapper-content'>\n\n\n        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer\n        />} />\n\n        <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n        <Route path=\"/users\" render={() => <UsersContainer />} />\n\n\n        <Route path=\"/news\" render={() => <News />} />\n        <Route path=\"/videos\" render={() => <Videos />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n\n        <Route path=\"/login\" render={() => <Login />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport state from './redux/store'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}